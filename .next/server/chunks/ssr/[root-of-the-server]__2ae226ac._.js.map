{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />;\n}\n\nexport { Badge, badgeVariants, type BadgeProps };\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAKF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBAAO,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC7E","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(\n  ({ className, ...props }, ref) => (\n    <div className=\"relative w-full overflow-auto\">\n      <table ref={ref} className={cn(\"w-full caption-bottom text-sm\", className)} {...props} />\n    </div>\n  )\n);\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, ...props }, ref) => (\n    <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n  )\n);\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, ...props }, ref) => (\n    <tbody ref={ref} className={cn(\"[&_tr:last-child]:border-0\", className)} {...props} />\n  )\n);\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, ...props }, ref) => (\n    <tfoot ref={ref} className={cn(\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\", className)} {...props} />\n  )\n);\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(\n  ({ className, ...props }, ref) => (\n    <tr\n      ref={ref}\n      className={cn(\n        \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(\n  ({ className, ...props }, ref) => (\n    <th\n      ref={ref}\n      className={cn(\n        \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(\n  ({ className, ...props }, ref) => (\n    <td\n      ref={ref}\n      className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n      {...props}\n    />\n  )\n);\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(\n  ({ className, ...props }, ref) => (\n    <caption ref={ref} className={cn(\"mt-4 text-sm text-muted-foreground\", className)} {...props} />\n  )\n);\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,KAAK;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAAa,GAAG,KAAK;;;;;;;;;;;AAI3F,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAG3E,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAAa,GAAG,KAAK;;;;;;AAGtF,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2DAA2D;QAAa,GAAG,KAAK;;;;;;AAGnH,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAIf,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAClC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAQ,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QAAa,GAAG,KAAK;;;;;;AAGhG,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)} {...props} />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(({ className, ...props }, ref) => (\n  <h3 ref={ref} className={cn(\"font-semibold leading-none tracking-tight\", className)} {...props} />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAwD,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5G,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yDAAyD;QAAa,GAAG,KAAK;;;;;;AAE7G,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAwD,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAClH,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAErF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAkE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3H,8OAAC;QAAG,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAAa,GAAG,KAAK;;;;;;AAEhG,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAoE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACnI,8OAAC;QAAE,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAEnF,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAwD,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACnH,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAwD,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAClH,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAAa,GAAG,KAAK;;;;;;AAElF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { db } from '@/lib/firebase'; // Keep this import for now, but we'll use Firestore functions directly\nimport { getFirestore, collection, getDocs } from 'firebase/firestore'; // Import Firestore functions\n\ninterface FirebaseDevice {\n    id: string;\n    meterId: string;\n    kwhr: number;\n    status: string;\n    tampering: string;\n    lastCommunication: string;\n}\n\nconst StatusBadge = ({ status }: { status: string }) => {\n    const variant = status.toLowerCase() === 'online' ? 'default' : 'destructive';\n    return <Badge variant={variant}>{status}</Badge>;\n};\n\nconst TamperingBadge = ({ status }: { status: any }) => { // Change type to any for flexibility\n    if (typeof status === 'string' && status.toLowerCase() === 'not tampered') { // Add type check\n        return <Badge variant=\"default\">Normal</Badge>;\n    }\n    // Handle cases where status is not a string or is not 'not tampered'\n    return <Badge variant=\"destructive\">{status ? String(status) : 'Unknown'}</Badge>; // Convert to string or show 'Unknown'\n};\n\n\nexport default function DashboardPage() {\n  const [meterData, setMeterData] = useState<FirebaseDevice[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Use getFirestore and collection directly\n        const firestoreDb = getFirestore();\n        const metersCollectionRef = collection(firestoreDb, 'meters');\n        const snapshot = await getDocs(metersCollectionRef);\n        const data = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data() as FirebaseDevice // Type assertion for safety\n        }));\n        setMeterData(data);\n      } catch (err: any) {\n        setError(err.message);\n        console.error(\"Error fetching meter data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Meter Data Dashboard</CardTitle>\n          <CardDescription>Overview of connected smart meters and their status.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Meter ID</TableHead>\n                <TableHead>Energy (kWh)</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead>Tampering Status</TableHead>\n                <TableHead>Last Communication</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {meterData.map((device) => (\n                <TableRow key={device.id}>\n                  <TableCell className=\"font-medium\">{device.meterId}</TableCell>\n                  <TableCell>{device.kwhr ? device.kwhr.toFixed(2) : '0.00'}</TableCell>\n                  <TableCell><StatusBadge status={device.status} /></TableCell>\n                  <TableCell><TamperingBadge status={device.tampering} /></TableCell>\n                  <TableCell>{device.lastCommunication}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}